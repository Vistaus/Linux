#!/bin/sh

function HELP() {
    printf"""
--- Rsync backupservice helper ---

Makes creating solid RSync schedules backups easy

1. It creates a systemd service for running the backup
2. The service checks for the existence of the Backup location
3. If existent, if backs your folders up and pauses for a specified time
4. After the pause it runs the service again

You can set:
    - Description
    - Drivename
    - System (sudo/root) or User service
    - Location to back up
    - Location of Backup
    - Directories to exclude (common TMP, Cache e.g. already excluded)
    - Backup interval (Default 1h)

"""
}

function USERCHOICE(){

read -p "Description of your Backup" DESCRIPTION

# name of drive
while true; do
    read -p "Set a custom name for Backup-Drive? Default:HDD (y/n) >" yn
    case $yn in
        [Yy]* ) read -p "Drive name: " DRIVENAME && break;;
        [Nn]* ) DRIVENAME=HDD && break;;
        * ) echo "Please answer yes or no.";;
    esac
done

while true; do
    read -p "System service (sudo) or user service? (s/u) " choice
    case $choice in
        [Ss]* ) SERVICELOCATION="/etc/systemd/system/" && SCRIPTLOCATION="/etc" && break;;
        [uU]* ) SERVICELOATION="~/.local/share/systemd/user/" && mkdir -p ~/.bin && SCRIPTLOCATION="~/.bin" && break;;
        * ) echo "Please choose one.";;
    esac
done

read -p "What folder do you want to sync?" FROMDIR

read -p "To what folder do you want to sync?" TODIR

# Ask for excluded dirs. some are already set.

EXCLUDES="--exclude=*.Trash* --exclude=*.cache* --exclude=*.Cache* --exclude=*/tmp --exclude=*/.tmp --exclude=*/*-tmp*"

echo "Cache and Temporary files are already excluded. You can manually add more exclusions."

while true; do
    read -p "Exclude some folders? (y/n) >" yn
    case $yn in
        [Yy]* ) read -p "Full path to folder: >" EXCLUDEADD && EXCLUDES+=" --exclude=$EXCLUDEADD";;
        [Nn]* ) break;;
        * ) echo "Please answer yes or no.";;
    esac
done

# Specific time interval

echo "Backups will start as soon as the Drive gets detected. After that, it waits for 1h to backuo again."

while true; do
    read -p "Set a custom Backup interval? (y/n) >" yn
    case $yn in
        [Yy]* ) read -p "Backup interval: " INTERVAL && break;;
        [Nn]* ) INTERVAL=3600 && break;;
        * ) echo "Please answer yes or no.";;
    esac
done

} #end of function

function CREATE() {
# Create the service
cat >> $SERVICELOCATION/rsync-backup.service <<EOF
[Unit]
Description=$DESCRIPTION

[Service]
Type=simple
ExecStart=$SCRIPTLOCATION/rsync-backup-home

[Install]
WantedBy=multi-user.target
EOF

# Create the script
cat >> $SCRIPTLOCATION/rsync-backup-script <<EOF
#!/bin/bash

function BACKUP() {

# Run rsync and get amount of copied data
rsync -avh $EXCLUDES $FROMDIR $TODIR | tee /var/tmp/rsync.out
BYTES_COPIED=$(grep "sent " /var/tmp/rsync.out | awk '{print $3}')
AMOUNT_GB=$(echo "scale=2; $BYTES_COPIED / 1024 / 1024 / 1024" | bc)

# Notify using notify-send
notify-send -a "rsync" "Backup to $DRIVENAME complete." "$AMOUNT_GB GB were backed up"
}

if [ -d "$TODIR" ]; then
    BACKUP
    sleep INTERVAL
fi
EOF

echo "Enabling Service"
systemctl enable rsync-backup.service

} #end of function


#
#
# Main Function
#
#


HELP

while true; do
    read -p "Do you want to create your rsync service? (y/n) " yn
    case $yn in
        [Yy]* ) USERCHOICE && CREATE && break;;
        [Nn]* ) break;;
        * ) echo "Please answer yes or no.";;
    esac
done
